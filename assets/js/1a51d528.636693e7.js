"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[2024],{1522:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=i(4848),t=i(8453);const s={},r="notifications",c={id:"api_reference/constructor_options/notifications",title:"notifications",description:"\x3c!--",source:"@site/docs/5_api_reference/constructor_options/notifications.md",sourceDirName:"5_api_reference/constructor_options",slug:"/api_reference/constructor_options/notifications",permalink:"/docs/api_reference/constructor_options/notifications",draft:!1,unlisted:!1,editUrl:"https://github.com/LDubya/OpenKeyNav/tree/main/packages/create-docusaurus/templates/shared/docs/5_api_reference/constructor_options/notifications.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"modesConfig",permalink:"/docs/api_reference/constructor_options/modesConfig"},next:{title:"spot",permalink:"/docs/api_reference/constructor_options/spot"}},a={},d=[{value:"Configuration Option",id:"configuration-option",level:2},{value:"<code>notifications</code>",id:"notifications-1",level:3},{value:"Properties",id:"properties",level:4},{value:"Example",id:"example",level:3}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"notifications",children:(0,o.jsx)(n.code,{children:"notifications"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"notifications"})," configuration option in OpenKeyNav allows you to customize how notifications are displayed to users. These notifications provide feedback about the current mode (e.g., clicking mode, drag mode)."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Purpose:"})," Provides feedback to users regarding the current mode for a more cohesive user experience."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration-option",children:"Configuration Option"}),"\n",(0,o.jsx)(n.h3,{id:"notifications-1",children:(0,o.jsx)(n.code,{children:"notifications"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type:"})," ",(0,o.jsx)(n.code,{children:"Object"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Description:"})," An object to configure notification settings."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"enabled"})," (boolean): Enables or disables notifications. Default is ",(0,o.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"displayToolName"})," (boolean): Determines whether the OpenKeyNav name is displayed in notifications. Default is ",(0,o.jsx)(n.code,{children:"true"}),".",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"Benefit:"})," Including the OpenKeyNav name in notifications helps users who are already familiar with OpenKeyNav know how to use the keyboard features on your website and reminds them of where to look for support and documentation, directing them to appropriate resources. This cohesive user experience can minimize support requests sent to your organization."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"duration"})," (number): Specifies how long (in milliseconds) each notification is displayed. Default is ",(0,o.jsx)(n.code,{children:"3000"})," milliseconds."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.p,{children:"Here's an example of how to configure notifications in OpenKeyNav:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const openKeyNav = new OpenKeyNav();\n\nconst config = {\n    notifications: {\n        enabled: true, // Enable notifications\n        displayToolName: true, // Display the OpenKeyNav name in notifications\n        duration: 10000 // Set notification duration to 10 seconds\n    }\n};\n\nopenKeyNav.init(config);\n"})}),"\n",(0,o.jsx)(n.p,{children:"In this example, notifications are enabled, the duration is set to 10 seconds, and the OpenKeyNav name is included in the notifications."}),"\n",(0,o.jsxs)(n.p,{children:["By configuring the ",(0,o.jsx)(n.code,{children:"notifications"})," option, you can tailor how users receive feedback while interacting with your web application, enhancing functionality and providing a cohesive user experience."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);