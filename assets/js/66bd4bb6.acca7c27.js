"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[4579],{5994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(4848),s=t(8453);const r={sidebar_position:2},a="Quick Start Guide",o={id:"getting_started/quick_start_guide",title:"Quick Start Guide",description:"Example of a Simple Integration with Default Key Settings",source:"@site/docs/2_getting_started/quick_start_guide.md",sourceDirName:"2_getting_started",slug:"/getting_started/quick_start_guide",permalink:"/docs/getting_started/quick_start_guide",draft:!1,unlisted:!1,editUrl:"https://github.com/LDubya/OpenKeyNav/tree/main/packages/create-docusaurus/templates/shared/docs/2_getting_started/quick_start_guide.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mainSidebar",previous:{title:"Installation",permalink:"/docs/getting_started/installation"},next:{title:"Basic Configuration",permalink:"/docs/configuration/basic_configuration"}},l={},c=[{value:"Example of a Simple Integration with Default Key Settings",id:"example-of-a-simple-integration-with-default-key-settings",level:2},{value:"Disabling Debug Mode for Production",id:"disabling-debug-mode-for-production",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"quick-start-guide",children:"Quick Start Guide"}),"\n",(0,i.jsx)(n.h2,{id:"example-of-a-simple-integration-with-default-key-settings",children:"Example of a Simple Integration with Default Key Settings"}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s an example of integrating OpenKeyNav into your project with default settings:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Include the Script"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Using npm:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import OpenKeyNav from 'openkeynav';\n\nconst openKeyNav = new OpenKeyNav();\nopenKeyNav.init();\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Using CDN:","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<script src="https://cdn.jsdelivr.net/npm/openkeynav/dist/openkeynav.umd.min.js"><\/script>\n<script>\n  const openKeyNav = new OpenKeyNav();\n  openKeyNav.init();\n<\/script>\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Navigate with Keyboard Shortcuts"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enter Click Mode"}),": Press ",(0,i.jsx)(n.code,{children:"k"}),' to label clickable elements with keyboard shortcuts. Press the key combinations on the labels to "click" the respective buttons.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigate Headers"}),": Press ",(0,i.jsx)(n.code,{children:"h"})," to navigate through headers within the viewport. You can also press ",(0,i.jsx)(n.code,{children:"1"}),", ",(0,i.jsx)(n.code,{children:"2"}),", ",(0,i.jsx)(n.code,{children:"3"}),", ",(0,i.jsx)(n.code,{children:"4"}),", ",(0,i.jsx)(n.code,{children:"5"}),", or ",(0,i.jsx)(n.code,{children:"6"})," to navigate through headers of the respective levels."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cycle Scrollable Regions"}),": Press ",(0,i.jsx)(n.code,{children:"s"})," to cycle through different scrollable regions within the viewport."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Drag-and-Drop Mode"}),": Press ",(0,i.jsx)(n.code,{children:"m"})," to enter drag mode, enabling keyboard-accessible drag-and-drop. This labels pre-configured draggable elements with keyboard shortcuts and their applicable drop zones."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"disabling-debug-mode-for-production",children:"Disabling Debug Mode for Production"}),"\n",(0,i.jsx)(n.p,{children:"By default, OpenKeyNav initiates in debug mode, which adds red labels to elements that are mouse-clickable but not tab-focusable. These elements are not WCAG-compliant, since they are not keyboard accessible. The elements with black labels are keyboard accessible. This enables you to identify the elements that need remediation."}),"\n",(0,i.jsx)(n.p,{children:"To disable debug mode for production, update the initialization code as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"openKeyNav.init({\n    debug: {\n        keyboardAccessible: false // Set this to false when done debugging inaccessible keyboard elements.\n    }\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"This quick start guide should help you get OpenKeyNav up and running on your website, enabling enhanced keyboard accessibility right away."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);