"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[2778],{631:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var a=t(4848),i=t(8453);const s={},l="Form Handling",o={id:"examples_and_tutorials/form_handling",title:"Form Handling",description:"OpenKeyNav&trade; can be used to enhance the keyboard accessibility of forms on your website. This example demonstrates how to integrate OpenKeyNav with form elements, ensuring that users can navigate and interact with forms efficiently using the keyboard.",source:"@site/docs/7_examples_and_tutorials/form_handling.md",sourceDirName:"7_examples_and_tutorials",slug:"/examples_and_tutorials/form_handling",permalink:"/docs/examples_and_tutorials/form_handling",draft:!1,unlisted:!1,editUrl:"https://github.com/LDubya/OpenKeyNav/tree/main/packages/create-docusaurus/templates/shared/docs/7_examples_and_tutorials/form_handling.md",tags:[],version:"current",frontMatter:{},sidebar:"mainSidebar",previous:{title:"Basic Example",permalink:"/docs/examples_and_tutorials/basic_example"},next:{title:"CMS Integration",permalink:"/docs/integration_guides/cms_integration"}},r={},d=[{value:"Step 1: Include OpenKeyNav",id:"step-1-include-openkeynav",level:2},{value:"Step 2: Initialize OpenKeyNav",id:"step-2-initialize-openkeynav",level:2},{value:"Step 3: Add Form Elements",id:"step-3-add-form-elements",level:2},{value:"Step 4: Using OpenKeyNav with Forms",id:"step-4-using-openkeynav-with-forms",level:2},{value:"Example",id:"example",level:3},{value:"Summary",id:"summary",level:3}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"form-handling",children:"Form Handling"}),"\n",(0,a.jsx)(n.p,{children:"OpenKeyNav\u2122 can be used to enhance the keyboard accessibility of forms on your website. This example demonstrates how to integrate OpenKeyNav with form elements, ensuring that users can navigate and interact with forms efficiently using the keyboard."}),"\n",(0,a.jsx)(n.h2,{id:"step-1-include-openkeynav",children:"Step 1: Include OpenKeyNav"}),"\n",(0,a.jsx)(n.p,{children:"First, include the OpenKeyNav library in your HTML file. You can do this by adding a script tag with the CDN link."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>OpenKeyNav Form Handling Example</title>\n    <script src="https://cdn.jsdelivr.net/npm/openkeynav/dist/openkeynav.min.js"><\/script>\n</head>\n<body>\n    \x3c!-- Your content here --\x3e\n</body>\n</html>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-2-initialize-openkeynav",children:"Step 2: Initialize OpenKeyNav"}),"\n",(0,a.jsx)(n.p,{children:"Next, initialize OpenKeyNav in your JavaScript. This should be done after the DOM content is fully loaded."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:"<script>\n    document.addEventListener('DOMContentLoaded', () => {\n        const openKeyNav = new OpenKeyNav();\n        openKeyNav.init();\n    });\n<\/script>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"step-3-add-form-elements",children:"Step 3: Add Form Elements"}),"\n",(0,a.jsx)(n.p,{children:"Add form elements to your HTML to see OpenKeyNav in action. For this example, we'll add a simple form with input fields and a submit button."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<body>\n    <form id="exampleForm">\n        <label for="name">Name:</label>\n        <input type="text" id="name" name="name">\n\n        <label for="email">Email:</label>\n        <input type="email" id="email" name="email">\n\n        <label for="message">Message:</label>\n        <textarea id="message" name="message"></textarea>\n\n        <button type="submit">Submit</button>\n    </form>\n\n    <script>\n        document.addEventListener(\'DOMContentLoaded\', () => {\n            const openKeyNav = new OpenKeyNav();\n            openKeyNav.init();\n        });\n    <\/script>\n</body>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"step-4-using-openkeynav-with-forms",children:"Step 4: Using OpenKeyNav with Forms"}),"\n",(0,a.jsx)(n.p,{children:"With OpenKeyNav initialized, you can use keyboard shortcuts to navigate and interact with the form elements on your page."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Press the ",(0,a.jsx)(n.code,{children:"k"})," key to enter click mode. This will label all clickable elements (including form elements) with keyboard shortcuts."]}),"\n",(0,a.jsx)(n.li,{children:'Press the key combinations shown on the labels to "click" or focus on the respective form elements.'}),"\n",(0,a.jsxs)(n.li,{children:["Use the ",(0,a.jsx)(n.code,{children:"Tab"})," key to navigate through the form fields."]}),"\n",(0,a.jsxs)(n.li,{children:["Press ",(0,a.jsx)(n.code,{children:"Enter"})," to submit the form when focused on the submit button."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"Here is the complete HTML code for the form handling example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>OpenKeyNav Form Handling Example</title>\n    <script src="https://cdn.jsdelivr.net/npm/openkeynav/dist/openkeynav.min.js"><\/script>\n</head>\n<body>\n    <form id="exampleForm">\n        <label for="name">Name:</label>\n        <input type="text" id="name" name="name">\n\n        <label for="email">Email:</label>\n        <input type="email" id="email" name="email">\n\n        <label for="message">Message:</label>\n        <textarea id="message" name="message"></textarea>\n\n        <button type="submit">Submit</button>\n    </form>\n\n    <script>\n        document.addEventListener(\'DOMContentLoaded\', () => {\n            const openKeyNav = new OpenKeyNav();\n            openKeyNav.init();\n        });\n    <\/script>\n</body>\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"By following these steps, you can quickly integrate OpenKeyNav into your forms to improve keyboard accessibility. This example provides a foundation to build upon, allowing you to customize and extend the functionality of OpenKeyNav to meet your specific needs for form handling."})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var a=t(6540);const i={},s=a.createContext(i);function l(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);